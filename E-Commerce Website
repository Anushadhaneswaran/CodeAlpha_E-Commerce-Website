index.html

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Express Clothes</title>
  <link rel="stylesheet" href="style2.css" />
</head>

<body>
  <header>
    <h1>Express Clothes</h1>
  </header>
  <input type="text" id="searchInput" placeholder="Search products..." onkeyup="filterProducts()" style="margin: 20px auto; display: block; padding: 10px; width: 80%;">
</section>

<label for="priceFilter">Filter by Price:</label>
<select id="priceFilter">
    <option value="all">All</option>
    <option value="under20">Under $20</option>
    <option value="20to25">$20 - $25</option>
    <option value="above25">Above $25</option>
  </select>

  <button onclick="filterByPrice()">Filter</button>
  <select id="categoryFilter" onchange="filterByCategory()" style="margin: 20px auto; display: block; padding: 10px; width: 80%;">
  <option value="all">All Categories</option>
  <option value="frock">Frock</option>
  <option value="top">Tops</option>
  <option value="anarkali">Anarkali</option>
</select>

<section class="products">
    <div class="product-cart" data-name="Frock" data-category="frock" data-price="19.5">
  <h2>Frock</h2>
      <img src="https://www.biba.in/on/demandware.static/-/Sites-biba-product-catalog/default/dw15070ddf/images/aw21/fussemifes1233eaw21blu_1.jpg" alt="Frock" />
      <h2>Frock</h2>
      <p>$19.50</p>
      <div class="star-rating" data-id="frock">
    <span class="star" data-value="1">★</span>
    <span class="star" data-value="2">★</span>
    <span class="star" data-value="3">★</span>
    <span class="star" data-value="4">★</span>
    <span class="star" data-value="5">★</span>
    </div>
    <p class="description">A beautiful blue frock made of cotton fabric. Available in all sizes.</p>
      <button onclick="addToCart('Frock', 19.5)">Add To Cart</button>
    </div>

    <div class="product-cart" data-name="Top" data-category="top" data-price="29.5">
        <h2>Top</h2>
      <img src="https://assets.ajio.com/medias/sys_master/root/20230629/Jd3c/649cb42aa9b42d15c9177436/-473Wx593H-465977185-blue-MODEL.jpg" alt="Top" />
      <h2>Top</h2>
      <p>$29.50</p>
      <div class="star-rating" data-id="frock">
    <span class="star" data-value="1">★</span>
    <span class="star" data-value="2">★</span>
    <span class="star" data-value="3">★</span>
    <span class="star" data-value="4">★</span>
    <span class="star" data-value="5">★</span>
  </div>
  <p class="description">Trendy top with floral prints. Best for casual wear.</p>
      <button onclick="addToCart('Top', 29.5)">Add To Cart</button>
    </div>

    <div class="product-cart" data-name="Anarkali" data-category="anarkali" data-price="36.5">
        <h2>Anarkali</h2>
      <img src="https://assets0.mirraw.com/images/11845670/ACW8803_zoom.jpg?1694693060" alt="Anarkali" />
      <h2>Anarkali</h2>
      <p>$36.50</p>
      <div class="star-rating" data-id="frock">
    <span class="star" data-value="1">★</span>
    <span class="star" data-value="2">★</span>
    <span class="star" data-value="3">★</span>
    <span class="star" data-value="4">★</span>
    <span class="star" data-value="5">★</span>
  </div>
  <p class="description">Elegant anarkali suit for festive occasions. Rayon fabric.</p>
    <button onclick="addToCart('Anarkali', 36.5)">Add To Cart</button>
    </div>
  </section>

  <section class="cart">
    <h2>Shopping Cart</h2>
    <ul id="cartList"></ul>
    <p id="cartTotal">Total: $0.00</p>
  </section>

  <section id="contact" class="contact-section">
  <h2>Contact Us</h2>
  <p>Email: <a href="mailto:support@expressclothes.com">support@expressclothes.com</a></p>
  <p>Phone: <a href="tel:+919876543210">+91 98765 43210</a></p>
  <p>Address: 123 Fashion Street, Chennai, India</p>

<form id="contactForm">
  <input type="text" id="userName" placeholder="Your Name" required>
  <input type="email" id="userEmail" placeholder="Your Email" required>
  <textarea id="userMessage" placeholder="Your Message" rows="4" required></textarea>
  <button type="submit">Send Message</button>
  <p id="formError" style="color: red; margin-top: 10px;"></p>
</form>

<h1>Welcome to Our E-Commerce Store!</h1>
  <p>You are logged in as <strong id="userDisplay"></strong></p>
  <button onclick="logout()">Logout</button>

  <script src="script2.js"></script>
</body>
</html>

style2.css

*{
  margin: 0px;
  padding: 0px;
  box-sizing: border-box;
}
body{
  font-family:sans-serif;
  background-color: rgb(237, 227, 213);
  padding: 20px;
}
img{
  width: 370px;
  height: 350px;
  background-color:none;
  border-radius: 10px;
}
header{
  text-align: center;
  padding: 20px;
  color: rgb(128, 99, 147);
}
.products {
display: grid;
grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
gap: 20px;
justify-content: center;
margin-top: 20px;
padding: 20px;
}

.product-cart {
background: #e6bfbf;
padding: 15px;
text-align: center;
border-radius: 10px;
box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.product-cart p{
  color: rgb(72, 72, 123);
}
button{
  font-family: sans-serif;
  background-color: aliceblue;
  border-radius: 10px;

}
.product-cart button:hover{
  background-color: rgb(172, 162, 201);
}
.cart{
   margin-top:30px;
   text-align: center;
   color: rgb(64, 88, 80);

}
#categoryFilter{
  margin: 20px auto; 
  display: block; 
  padding: 10px; 
  width: 80%;
}
select {
padding: 8px;
font-size: 16px;
border-radius: 5px;

}
option{
  text-align: center;
}
label {
font-size: 18px;
margin-right: 10px;
}
#priceFilter {
padding: 8px;
margin-bottom: 20px;

}

#productContainer {
display: flex;
flex-wrap: wrap;
gap: 20px;
}

button:hover {
background-color: #45a049;
}

.star-rating {
display: flex;
gap: 5px;
cursor: pointer;
margin: 8px 0;
}

.star {
font-size: 20px;
color: lightgray;
transition: color 0.2s;
}

.star.active,
.star:hover,
.star:hover ~ .star {
color: rgb(236, 194, 115);
}


.description {
display: none;
font-size: 14px;
margin-top: 8px;
color: #555;
}

.product-cart:hover .description {
display: block;
background-color: #f9f9f9;
padding: 5px;
border-radius: 4px;
}

.contact-section {
padding: 30px;
background-color: #f5f5f5;
margin-top: 40px;
border-radius: 10px;
text-align: center;
}

.contact-section h2 {
margin-bottom: 20px;
}

.contact-section p {
margin: 8px 0;
}

.contact-section form {
margin-top: 20px;
display: flex;
flex-direction: column;
align-items: center;
}

.contact-section input,
.contact-section textarea {
width: 80%;
max-width: 400px;
padding: 10px;
margin-bottom: 15px;
border-radius: 5px;
border: 1px solid #ccc;
}

.contact-section button {
padding: 10px 20px;
background-color: #333;
color: white;
border: none;
border-radius: 5px;
cursor: pointer;
}

.contact-section button:hover {
background-color: #555;
}

body {
    font-family: Arial, sans-serif;
    background: #e3f2fd;
    padding: 20px;
    text-align: center;
  }
  h1 {
    color: #1976d2;
  }
  button {
    padding: 10px 20px;
    background-color: #d32f2f;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    margin-top: 20px;
  }

script2.js
const user = localStorage.getItem('loggedInUser');
if (!user) {
  alert('Please login first');
  window.location.href = 'login.html';
}
document.addEventListener("DOMContentLoaded", () => {
  document.getElementById('userDisplay').textContent = user;
});

function logout() {
  localStorage.removeItem('loggedInUser');
  window.location.href = 'login.html';
}

window.onload = function () {
  const loggedInUser = localStorage.getItem("loggedInUser");

  if (!loggedInUser) {
    alert("Please login first!");
    window.location.href = "login.html";
  } else {
    const userDisplay = document.getElementById("userDisplay");
    if (userDisplay) {
      userDisplay.innerText = loggedInUser;
    }
  }
};

let cart = [];

function addToCart(productName, price) {
  const existingProduct = cart.find(item => item.name === productName); 
  if (existingProduct) {
    existingProduct.quantity += 1; 
  } else {
    cart.push({ name: productName, price, quantity: 1 }); 
  updateCart(); 
  }
}

function removeFromCart(index) {
  cart.splice(index, 1); 
  updateCart();
}

function increaseQuantity(index) {
  cart[index].quantity += 1; 
  updateCart();
}

function decreaseQuantity(index) {
  if (cart[index].quantity > 1) {
    cart[index].quantity -= 1; 
  } else {
    cart.splice(index, 1); 
  }
  updateCart();
}

function updateCart() {
  const cartList = document.getElementById('cartList');
  const cartTotal = document.getElementById('cartTotal');

  cartList.innerHTML = ''; 
  let total = 0;

  cart.forEach((item, index) => {
    const li = document.createElement('li');
    li.textContent = `${item.name} - $${item.price.toFixed(2)} x ${item.quantity} `;


    const decreaseBtn = document.createElement('button');
    decreaseBtn.textContent = ' - ';
    decreaseBtn.onclick = () => decreaseQuantity(index);


    const increaseBtn = document.createElement('button');
    increaseBtn.textContent = ' + ';
    increaseBtn.onclick = () => increaseQuantity(index);


    const removeBtn = document.createElement('button');
    removeBtn.textContent = 'Remove';
    removeBtn.onclick = () => removeFromCart(index);

    li.appendChild(decreaseBtn);
    li.appendChild(increaseBtn);
    li.appendChild(removeBtn);

    cartList.appendChild(li);

    total += item.price * item.quantity; 
  });

  cartTotal.textContent = `Total: $${total.toFixed(2)}`;
}
function checkout() {
  const summaryBox = document.getElementById('orderSummary');

  if (cart.length === 0) {
    summaryBox.innerHTML = `<p>Your cart is empty!</p>`;
  } else {
    let summaryHTML = `<h3>Order Summary</h3><ul>`;
    let finalTotal = 0;

    cart.forEach(item => {
      summaryHTML += `<li>${item.name} - $${item.price.toFixed(2)} × ${item.quantity}</li>`;
      finalTotal += item.price * item.quantity;
    });

    summaryHTML += `</ul><p><strong>Total: $${finalTotal.toFixed(2)}</strong></p>`;
    summaryHTML += `<button onclick="closeSummary()">Close</button> `;
    summaryHTML += `<button onclick="clearCart()">Place Order</button>`;
    summaryBox.innerHTML = summaryHTML;
  }

  summaryBox.classList.remove('hidden');
}

function closeSummary() {
  document.getElementById('orderSummary').classList.add('hidden');
}

function clearCart() {
  cart = [];
  updateCart();
  closeSummary();
  alert("Thank you for your order!");
}
function filterProducts() {
  const input = document.getElementById('searchInput').value.toLowerCase();
  const products = document.querySelectorAll('.product-cart');

  products.forEach(product => {
    const name = product.querySelector('h2').textContent.toLowerCase();
    if (name.includes(input)) {
      product.style.display = 'block';
    } else {
      product.style.display = 'none';
    }
  });
}
function filterByCategory() {
  const selectedCategory = document.getElementById('categoryFilter').value;
  const products = document.querySelectorAll('.product-cart');

  products.forEach(product => {
    const category = product.getAttribute('data-category');
    if (selectedCategory === 'all' || category === selectedCategory) {
      product.style.display = 'block';
    } else {
      product.style.display = 'none';
    }
  });
}

function filterByPrice() {
  const filterValue = document.getElementById('priceFilter').value;
  const products = document.querySelectorAll('.product-cart');

  products.forEach(product => {
    const price = parseFloat(product.getAttribute('data-price'));
    let show = false;

    if (filterValue === 'all') {
      show = true;
    } else if (filterValue === 'under20' && price < 20) {
      show = true;
    } else if (filterValue === '20to25' && price >= 20 && price <= 25) {
      show = true;
    } else if (filterValue === 'above25' && price > 25) {
      show = true;
    }

    product.style.display = show ? 'block' : 'none';
  });
}

document.addEventListener("DOMContentLoaded", function () {
  const starContainers = document.querySelectorAll(".star-rating");

  starContainers.forEach(container => {
    const stars = container.querySelectorAll(".star");

    stars.forEach((star, index) => {
      star.addEventListener("click", () => {
        const value = parseInt(star.getAttribute("data-value"));
        setRating(container, value);
      });
    });
  });

  function setRating(container, value) {
    const stars = container.querySelectorAll(".star");
    stars.forEach((star, index) => {
      star.classList.toggle("active", index < value);
    });
  }
});

document.getElementById('contactForm').addEventListener('submit', function (e) {
  e.preventDefault();
  alert('Thank you for contacting us! We will get back to you soon.');
  this.reset();
});

const username = localStorage.getItem('username');
    if (!username) {
      alert("You are not logged in. Redirecting to login page...");
      window.location.href = "login.html";
    } else {
      document.getElementById('userDisplay').textContent = username;
    }

    function logout() {
      localStorage.removeItem('username');
      localStorage.removeItem('email');
      localStorage.removeItem('password');
      alert("You have been logged out.");
      window.location.href = "login.html";
    }
index.html
<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f0f2f5;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
    }

    form {
      background-color: #fff;
      padding: 30px;
      border-radius: 10px;
      box-shadow: 0px 0px 10px rgba(0,0,0,0.1);
      width: 300px;
    }

    h2 {
      text-align: center;
      color: #333;
    }

    input[type="text"],
    input[type="password"] {
      width: 100%;
      padding: 10px;
      margin: 10px 0;
      border: 1px solid #ccc;
      border-radius: 5px;
    }

    button {
      width: 100%;
      padding: 10px;
      background-color: #4CAF50;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }

    button:hover {
      background-color: #45a049;
    }
  </style>
</head>
<body>
  <form id="loginForm">
    <h2>Login</h2>
    <input type="text" id="loginUsername" placeholder="Username" required />
    <input type="password" id="loginPassword" placeholder="Password" required />
    <button type="submit">Login</button>
  </form>

  <script>
    document.getElementById('loginForm').addEventListener('submit', function(e) {
      e.preventDefault();
      const storedUsername = localStorage.getItem('username');
      const storedPassword = localStorage.getItem('password');

      const enteredUsername = document.getElementById('loginUsername').value;
      const enteredPassword = document.getElementById('loginPassword').value;

      if (enteredUsername === storedUsername && enteredPassword === storedPassword) {
        localStorage.setItem('loggedInUser', enteredUsername);
        alert('Login successful!');
        window.location.href = 'index2.html'; 
      } else {
        alert('Invalid credentials!');
      }
    });
    <script>
      document.getElementById("loginForm").addEventListener("submit", async function (e) {
        e.preventDefault();
        const username = document.getElementById("loginUsername").value;
        const password = document.getElementById("loginPassword").value;

        const res = await fetch("/api/login", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ username, password })
        });

        const data = await res.json();
        alert(data.message);

        if (res.ok) {
          localStorage.setItem("loggedInUser", username);
          window.location.href = "/";
        }
      });
    </script>
</body>
</html>

register.html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Register</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #e0f7fa;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
    }
    .container {
      background: #fff;
      padding: 30px;
      border-radius: 10px;
      box-shadow: 0 0 10px #ccc;
      width: 350px;
    }
    h2 {
      text-align: center;
      color: #00796b;
    }
    input {
      width: 100%;
      padding: 10px;
      margin: 10px 0;
      border-radius: 5px;
      border: 1px solid #ccc;
    }
    button {
      width: 100%;
      padding: 10px;
      background: #00796b;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }
    #message {
      text-align: center;
      margin-top: 10px;
      color: red;
    }
  </style>
</head>
<body>
  <div class="container">
    <h2>Register</h2>
    <input type="text" id="regUsername" placeholder="Username" required>
    <input type="email" id="regEmail" placeholder="Email" required>
    <input type="password" id="regPassword" placeholder="Password" required>
    <button onclick="registerUser()">Register</button>
    <p id="message"></p>
    <p style="text-align:center;">Already registered? <a href="login.html">Login</a></p>
  </div>

  <script>
    function registerUser() {
      const username = document.getElementById('regUsername').value.trim();
      const email = document.getElementById('regEmail').value.trim();
      const password = document.getElementById('regPassword').value;

      if (!username || !email || !password) {
        document.getElementById('message').textContent = 'Please fill in all fields';
        return;
      }

      localStorage.setItem('username', username);
      localStorage.setItem('email', email);
      localStorage.setItem('password', password);
      document.getElementById('message').style.color = 'green';
      document.getElementById('message').textContent = 'Registered successfully! Redirecting to login...';

      setTimeout(() => {
        window.location.href = 'login.html';
      }, 2000);
    }
      document.querySelector("button").addEventListener("click", async function () {
        const username = document.getElementById("regUsername").value;
        const email = document.getElementById("regEmail").value;
        const password = document.getElementById("regPassword").value;

        const res = await fetch("/api/register", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ username, email, password })
        });

        const data = await res.json();
        alert(data.message);

        if (res.ok) {
          window.location.href = "/login";
        }
      });
    </script>
</body>
</html>

index.js

const express = require("express");
const path = require("path");
const bodyParser = require("body-parser");

const app = express();
const PORT = process.env.PORT || 3000;

// Middleware
app.use(bodyParser.urlencoded({ extended: true }));
app.use(bodyParser.json());
app.use(express.static(__dirname)); // serve static files (css/js/html)

// In-memory "fake" database (clears on restart)
let users = [];

// Serve frontend pages
app.get("/", (req, res) => {
  res.sendFile(path.join(__dirname, "index2.html"));
});

app.get("/login", (req, res) => {
  res.sendFile(path.join(__dirname, "login.html"));
});

app.get("/register", (req, res) => {
  res.sendFile(path.join(__dirname, "register.html"));
});

// Register user
app.post("/api/register", (req, res) => {
  const { username, email, password } = req.body;

  // Check if user already exists
  const existingUser = users.find(user => user.username === username);
  if (existingUser) {
    return res.status(400).json({ message: "User already exists" });
  }

  users.push({ username, email, password });
  res.json({ message: "Registration successful" });
});

// Login user
app.post("/api/login", (req, res) => {
  const { username, password } = req.body;

  const user = users.find(
    user => user.username === username && user.password === password
  );

  if (!user) {
    return res.status(401).json({ message: "Invalid credentials" });
  }

  res.json({ message: "Login successful" });
});

// Start server
app.listen(PORT, () => {
  console.log(`Server running at http://localhost:${PORT}`);
});
app.get("/test", (req, res) => {
  res.send("Backend is working!");
});


package.json
{
  "name": "nodejs",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@types/node": "^22.13.11",
    "body-parser": "^2.2.0",
    "cors": "^2.8.5",
    "express": "^5.1.0",
    "mongoose": "^8.16.0"
  }
}

output







